### YamlMime:JavaMember
uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesBatch*"
fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesBatch"
name: "extractKeyPhrasesBatch"
nameWithType: "TextAnalyticsAsyncClient.extractKeyPhrasesBatch"
members:
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesBatch(java.lang.Iterable<com.azure.ai.textanalytics.models.TextDocumentInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesBatch(Iterable<TextDocumentInput> documents, TextAnalyticsRequestOptions options)"
  name: "extractKeyPhrasesBatch(Iterable<TextDocumentInput> documents, TextAnalyticsRequestOptions options)"
  nameWithType: "TextAnalyticsAsyncClient.extractKeyPhrasesBatch(Iterable<TextDocumentInput> documents, TextAnalyticsRequestOptions options)"
  summary: "Returns a list of strings denoting the key phrases in the document with provided request options. See [this][] for the list of enabled languages.\n\nExtract key phrases in a list of <xref uid=\"com.azure.ai.textanalytics.models.TextDocumentInput\" data-throw-if-not-resolved=\"false\">document</xref> with provided request options. Subscribes to the call asynchronously and prints out the key phrases when a response is received.\n\n```java\nList<TextDocumentInput> textDocumentInputs1 = Arrays.asList(\n     new TextDocumentInput(\"0\", \"I had a wonderful trip to Seattle last week.\"),\n     new TextDocumentInput(\"1\", \"I work at Microsoft.\"));\n \n // Request options: show statistics and model version\n TextAnalyticsRequestOptions requestOptions = new TextAnalyticsRequestOptions().setIncludeStatistics(true);\n \n textAnalyticsAsyncClient.extractKeyPhrasesBatch(textDocumentInputs1, requestOptions).byPage()\n     .subscribe(response -> {\n         // Batch statistics\n         TextDocumentBatchStatistics batchStatistics = response.getStatistics();\n         System.out.printf(\"Batch statistics, transaction count: %s, valid document count: %s.%n\",\n             batchStatistics.getTransactionCount(), batchStatistics.getValidDocumentCount());\n \n         for (ExtractKeyPhraseResult extractKeyPhraseResult : response.getElements()) {\n             System.out.println(\"Extracted phrases:\");\n             for (String keyPhrase : extractKeyPhraseResult.getKeyPhrases()) {\n                 System.out.printf(\"%s.%n\", keyPhrase);\n             }\n         }\n     });\n```\n\n\n[this]: https://aka.ms/talangs"
  parameters:
  - description: "A list of <xref uid=\"com.azure.ai.textanalytics.models.TextDocumentInput\" data-throw-if-not-resolved=\"false\">documents</xref>  to be analyzed.\n For text length limits, maximum batch size, and supported text encoding, see\n <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\">data limits</a>."
    name: "documents"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.textanalytics.models.TextDocumentInput?alt=com.azure.ai.textanalytics.models.TextDocumentInput&text=TextDocumentInput\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The <xref uid=\"com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions\" data-throw-if-not-resolved=\"false\">options</xref> to configure the scoring model for documents\n and show statistics."
    name: "options"
    type: "<xref href=\"com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions?alt=com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions&text=TextAnalyticsRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TextAnalyticsPagedFlux<ExtractKeyPhraseResult> extractKeyPhrasesBatch(Iterable<TextDocumentInput> documents, TextAnalyticsRequestOptions options)"
  returns:
    description: "A <xref uid=\"com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux\" data-throw-if-not-resolved=\"false\">TextAnalyticsPagedFlux</xref> contains a list of\n <xref uid=\"com.azure.ai.textanalytics.models.ExtractKeyPhraseResult\" data-throw-if-not-resolved=\"false\">extracted key phrases document result</xref>."
    type: "<xref href=\"com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux?alt=com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux&text=TextAnalyticsPagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.textanalytics.models.ExtractKeyPhraseResult?alt=com.azure.ai.textanalytics.models.ExtractKeyPhraseResult&text=ExtractKeyPhraseResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesBatch(java.lang.Iterable<java.lang.String>)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesBatch(Iterable<String> documents)"
  name: "extractKeyPhrasesBatch(Iterable<String> documents)"
  nameWithType: "TextAnalyticsAsyncClient.extractKeyPhrasesBatch(Iterable<String> documents)"
  summary: "Returns a list of strings denoting the key phrases in the document. This method will use the default language that sets up in <xref uid=\"com.azure.ai.textanalytics.TextAnalyticsClientBuilder.defaultLanguage(java.lang.String)\" data-throw-if-not-resolved=\"false\">TextAnalyticsClientBuilder#defaultLanguage(String)</xref>. If none is specified, service will use 'en' as the language.\n\nExtract key phrases in a list of documents. Subscribes to the call asynchronously and prints out the key phrases when a response is received.\n\n```java\nList<String> documents = Arrays.asList(\n     \"Hello world. This is some input text that I love.\",\n     \"Bonjour tout le monde\");\n \n textAnalyticsAsyncClient.extractKeyPhrasesBatch(documents).byPage().subscribe(extractKeyPhraseResults -> {\n     // Batch statistics\n     TextDocumentBatchStatistics batchStatistics = extractKeyPhraseResults.getStatistics();\n     System.out.printf(\"Batch statistics, transaction count: %s, valid document count: %s.%n\",\n         batchStatistics.getTransactionCount(), batchStatistics.getValidDocumentCount());\n \n     extractKeyPhraseResults.getElements().forEach(extractKeyPhraseResult -> {\n         System.out.println(\"Extracted phrases:\");\n         extractKeyPhraseResult.getKeyPhrases().forEach(keyPhrase -> System.out.printf(\"%s.%n\", keyPhrase));\n     });\n });\n```"
  parameters:
  - description: "A list of documents to be analyzed.\n For text length limits, maximum batch size, and supported text encoding, see\n <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\">data limits</a>."
    name: "documents"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public TextAnalyticsPagedFlux<ExtractKeyPhraseResult> extractKeyPhrasesBatch(Iterable<String> documents)"
  returns:
    description: "A <xref uid=\"com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux\" data-throw-if-not-resolved=\"false\">TextAnalyticsPagedFlux</xref> contains a list of\n <xref uid=\"com.azure.ai.textanalytics.models.ExtractKeyPhraseResult\" data-throw-if-not-resolved=\"false\">extracted key phrases document result</xref>."
    type: "<xref href=\"com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux?alt=com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux&text=TextAnalyticsPagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.textanalytics.models.ExtractKeyPhraseResult?alt=com.azure.ai.textanalytics.models.ExtractKeyPhraseResult&text=ExtractKeyPhraseResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesBatch(java.lang.Iterable<java.lang.String>,java.lang.String)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesBatch(Iterable<String> documents, String language)"
  name: "extractKeyPhrasesBatch(Iterable<String> documents, String language)"
  nameWithType: "TextAnalyticsAsyncClient.extractKeyPhrasesBatch(Iterable<String> documents, String language)"
  summary: "Returns a list of strings denoting the key phrases in the document with provided language code. See [this][] for the list of enabled languages.\n\nExtract key phrases in a list of documents with a provided language code. Subscribes to the call asynchronously and prints out the key phrases when a response is received.\n\n```java\nList<String> documents = Arrays.asList(\n     \"Hello world. This is some input text that I love.\",\n     \"Bonjour tout le monde\");\n \n textAnalyticsAsyncClient.extractKeyPhrasesBatch(documents, \"en\").byPage().subscribe(\n     extractKeyPhraseResults -> {\n         // Batch statistics\n         TextDocumentBatchStatistics batchStatistics = extractKeyPhraseResults.getStatistics();\n         System.out.printf(\"Batch statistics, transaction count: %s, valid document count: %s.%n\",\n             batchStatistics.getTransactionCount(), batchStatistics.getValidDocumentCount());\n \n         extractKeyPhraseResults.getElements().forEach(extractKeyPhraseResult -> {\n             System.out.println(\"Extracted phrases:\");\n             extractKeyPhraseResult.getKeyPhrases().forEach(keyPhrase -> System.out.printf(\"%s.%n\", keyPhrase));\n         });\n     });\n```\n\n\n[this]: https://aka.ms/talangs"
  parameters:
  - description: "A list of documents to be analyzed.\n For text length limits, maximum batch size, and supported text encoding, see\n <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\">data limits</a>."
    name: "documents"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The 2 letter ISO 639-1 representation of language for the text. If not set, uses \"en\" for\n English as default."
    name: "language"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TextAnalyticsPagedFlux<ExtractKeyPhraseResult> extractKeyPhrasesBatch(Iterable<String> documents, String language)"
  returns:
    description: "A <xref uid=\"com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux\" data-throw-if-not-resolved=\"false\">TextAnalyticsPagedFlux</xref> contains a list of\n <xref uid=\"com.azure.ai.textanalytics.models.ExtractKeyPhraseResult\" data-throw-if-not-resolved=\"false\">extracted key phrases document result</xref>."
    type: "<xref href=\"com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux?alt=com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux&text=TextAnalyticsPagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.textanalytics.models.ExtractKeyPhraseResult?alt=com.azure.ai.textanalytics.models.ExtractKeyPhraseResult&text=ExtractKeyPhraseResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesBatch(java.lang.Iterable<java.lang.String>,java.lang.String,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesBatch(Iterable<String> documents, String language, TextAnalyticsRequestOptions options)"
  name: "extractKeyPhrasesBatch(Iterable<String> documents, String language, TextAnalyticsRequestOptions options)"
  nameWithType: "TextAnalyticsAsyncClient.extractKeyPhrasesBatch(Iterable<String> documents, String language, TextAnalyticsRequestOptions options)"
  summary: "Returns a list of strings denoting the key phrases in the document with provided language code and request options. See [this][] for the list of enabled languages.\n\nExtract key phrases in a list of documents with a provided language and request options. Subscribes to the call asynchronously and prints out the key phrases when a response is received.\n\n```java\nList<String> documents = Arrays.asList(\n     \"Hello world. This is some input text that I love.\",\n     \"Bonjour tout le monde\");\n \n textAnalyticsAsyncClient.extractKeyPhrasesBatch(documents, \"en\", null).byPage().subscribe(\n     extractKeyPhraseResults -> {\n         // Batch statistics\n         TextDocumentBatchStatistics batchStatistics = extractKeyPhraseResults.getStatistics();\n         System.out.printf(\"Batch statistics, transaction count: %s, valid document count: %s.%n\",\n             batchStatistics.getTransactionCount(), batchStatistics.getValidDocumentCount());\n \n         extractKeyPhraseResults.getElements().forEach(extractKeyPhraseResult -> {\n             System.out.println(\"Extracted phrases:\");\n             extractKeyPhraseResult.getKeyPhrases().forEach(keyPhrase -> System.out.printf(\"%s.%n\", keyPhrase));\n         });\n     });\n```\n\n\n[this]: https://aka.ms/talangs"
  parameters:
  - description: "A list of documents to be analyzed.\n For text length limits, maximum batch size, and supported text encoding, see\n <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\">data limits</a>."
    name: "documents"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The 2 letter ISO 639-1 representation of language for the text. If not set, uses \"en\" for\n English as default."
    name: "language"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The <xref uid=\"com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions\" data-throw-if-not-resolved=\"false\">options</xref> to configure the scoring model for documents\n and show statistics."
    name: "options"
    type: "<xref href=\"com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions?alt=com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions&text=TextAnalyticsRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TextAnalyticsPagedFlux<ExtractKeyPhraseResult> extractKeyPhrasesBatch(Iterable<String> documents, String language, TextAnalyticsRequestOptions options)"
  returns:
    description: "A <xref uid=\"com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux\" data-throw-if-not-resolved=\"false\">TextAnalyticsPagedFlux</xref> contains a list of\n <xref uid=\"com.azure.ai.textanalytics.models.ExtractKeyPhraseResult\" data-throw-if-not-resolved=\"false\">extracted key phrases document result</xref>."
    type: "<xref href=\"com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux?alt=com.azure.ai.textanalytics.util.TextAnalyticsPagedFlux&text=TextAnalyticsPagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.textanalytics.models.ExtractKeyPhraseResult?alt=com.azure.ai.textanalytics.models.ExtractKeyPhraseResult&text=ExtractKeyPhraseResult\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.ai.textanalytics"
artifact: com.azure:azure-ai-textanalytics:1.0.0-beta.4
